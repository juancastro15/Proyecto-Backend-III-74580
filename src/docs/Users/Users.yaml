paths:
  /api/users:
    get:
      summary: Obtener todos los usuarios
      tags:
        - Users
      responses:
        '200':
          description: Lista de usuarios obtenida correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '500':
          description: Error interno del servidor
    post:
      summary: Crear un nuevo usuario
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requestBodies/CreateUser'
      responses:
        '201':
          description: Usuario creado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Datos incompletos
        '500':
          description: Error interno del servidor

  /api/users/{uid}:
    get:
      summary: Obtener un usuario por ID
      tags:
        - Users
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
          description: ID del usuario
      responses:
        '200':
          description: Usuario encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Usuario no encontrado
        '500':
          description: Error interno del servidor
    put:
      summary: Actualizar un usuario
      tags:
        - Users
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
          description: ID del usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requestBodies/UpdateUser'
      responses:
        '200':
          description: Usuario actualizado correctamente
        '404':
          description: Usuario no encontrado
        '500':
          description: Error interno del servidor
    delete:
      summary: Eliminar un usuario
      tags:
        - Users
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
          description: ID del usuario
      responses:
        '200':
          description: Usuario eliminado correctamente
        '404':
          description: Usuario no encontrado
        '500':
          description: Error interno del servidor

components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          description: ID autogenerado por MongoDB
        name:
          type: string
          description: Nombre del usuario
        email:
          type: string
          format: email
          description: Correo electrónico del usuario
        password:
          type: string
          description: Contraseña encriptada
        role:
          type: string
          description: Rol del usuario (e.g., admin, user)
        pets:
          type: array
          items:
            type: string
          description: IDs de las mascotas asociadas al usuario
      example:
        _id: "64b3dcbf5a647"
        name: "Elvira Lando"
        email: "elando@gmail.com"
        password: "hashed_password"
        role: "user"
        pets:
          - "64b3dcbf5a648"

  requestBodies:
    CreateUser:
      type: object
      properties:
        name:
          type: string
          description: Nombre del usuario
        email:
          type: string
          format: email
          description: Correo electrónico único
        password:
          type: string
          description: Contraseña del usuario
        role:
          type: string
          description: Rol del usuario
      example:
        name: "Elvira Lando"
        email: "elando@gmail.com"
        password: "secure_password"
        role: "user"

    UpdateUser:
      type: object
      properties:
        name:
          type: string
          description: Nombre del usuario
        email:
          type: string
          format: email
          description: Correo electrónico del usuario
        password:
          type: string
          description: Contraseña del usuario
        role:
          type: string
          description: Rol del usuario
      example:
        name: "Elviara updated"
        email: "elando2@gmail.com"
        password: "updated_password"
        role: "admin"